name: build

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Flutter action
        uses: subosito/flutter-action@v1.4.0

      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.4'
      - run: flutter pub get
      - run: flutter format --dry-run --set-exit-if-changed .
      - run: flutter analyze

        # run  flutter widgets tests  and unit tests
      - run: flutter test --coverage
        # Upload coverage reports to Codecov
        # https://github.com/marketplace/actions/codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

      - run: pushd example && flutter build apk --release --split-per-abi
      - run: pushd example && flutter build appbundle

      # This action will create a github release and optionally upload an artifact to it.
      # https://github.com/ncipollo/release-action
      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          commit: ${{ github.sha }}
          token: ${{ secrets.GH_TOKEN }}
      #
      ##- run: flutter build ios --release --no-codesign
      #
      ## Upload generated apk to the artifacts.
      #- uses: actions/upload-artifact@v1
      #  with:
      #    name: release-apk
      #    path: build/app/outputs/apk/release/app-release.apk
